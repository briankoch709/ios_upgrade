---
- name: IOS SAVE CONFIG/RELOAD SWITCH
  hosts: ios
  connection: network_cli
  gather_facts: no

# 2019-04-01: initial version
# 2019-05-10: updated set boot vars

  vars:
    ansible_network_os: ios
    ANSIBLE_HOST_KEY_CHECKING: FALSE
    command_timeout: 600
    device_model:
    catalyst_file_system: "flash:"
    reboot_timeout: "600"
    ios_file_exists: false
    flash2_exists: false
    ios_file2_exists: false
    reboot_ready: false
    test_cdp_neigh: false
    test_int_status: false
    test_bgp_neigh: false
    switch_type: "modern"
    backup_filename:
    compliant_ios_version: 15.2(2)E8
    compliant_ios_file:
    compliant_ios_file_size:
    compliant_ios_md5_value: 'abcdef1234567890'
    compliant_ios_file_c2960s: c2960s-universalk9-mz.152-2.E8.bin
    compliant_ios_file_size_c2960s: "16967680"
    compliant_ios_file_c2960x: c2960x-universalk9-mz.152-2.E8.bin
    compliant_ios_file_size_c2960x: "21287936"
    compliant_ios_file_c2960c: c2960c405-universalk9-mz.152-2.E8.bin
    compliant_ios_file_size_c2960c: "16677888"
    compliant_ios_file_c3560c: c3560c405-universalk9-mz.152-2.E8.bin
    compliant_ios_file_size_c3560c: "20004864"
    compliant_ios_file_c3560cg: c3560c405ex-universalk9-mz.152-2.E8.bin
    compliant_ios_file_size_c3560cg: "20628480"
    compliant_ios_file_c3560x: c3560e-universalk9-mz.152-2.E8.bin
    compliant_ios_file_size_c3560x: "24385536"
    compliant_ios_version_c3560cx: 15.2(6)E2
    compliant_ios_file_c3560cx: c3560cx-universalk9-mz.152-6.E2.bin
    compliant_ios_file_size_c3560cx: "22798336"
    compliant_ios_file_c3750x: c3750e-universalk9-mz.152-2.E8.bin
    compliant_ios_file_size_c3750x: "24470528"
    compliant_ios_version_cat3k: 16.3.8
    compliant_ios_file_cat3k: cat3k_caa-universalk9.16.03.08.SPA.bin
    compliant_ios_file_size_cat3k: '535578976'
#    compliant_ios_version_cat3k: 16.6.6
#    compliant_ios_file_cat3k: cat3k_caa-universalk9.16.06.06.SPA.bin
#    compliant_ios_file_size_cat3k: '404851998'

  tasks:
    - name: GATHER IOS SWITCH FACTS
      ios_facts:
        gather_subset: hardware

    - name: SET MODEL VARIABLE LEGACY 
      set_fact:
        switch_type: "legacy"
      when: '"C2960-" in ansible_net_model or "C2950" in ansible_net_model or "C2970" in ansible_net_model'

    - name: SET MODEL VARIABLE C2960X
      set_fact:
        device_model: 'c2960x'
      when: '"C2960X-" in ansible_net_model'

    - name: SET MODEL VARIABLE C2960S
      set_fact:
        device_model: 'c2960s'
      when: '"C2960S-" in ansible_net_model'

    - name: SET MODEL VARIABLE C2960C
      set_fact:
        device_model: 'c2960c'
      when: '"C2960C-" in ansible_net_model'

    - name: SET MODEL VARIABLE C3560
      set_fact:
        device_model: 'c3560'
      when: '"C3560-" in ansible_net_model'

    - name: SET MODEL VARIABLE C3560C
      set_fact:
        device_model: 'c3560c'
      when: '"C3560C-" in ansible_net_model'

    - name: SET MODEL VARIABLE C3560CG
      set_fact:
        device_model: 'c3560cg'
      when: '"C3560CG-" in ansible_net_model'

    - name: SET MODEL VARIABLE C3560CX
      set_fact:
        device_model: 'c3560cx'
        compliant_ios_version: "{{ compliant_ios_version_c3560cx }}"
      when: '"C3560CX-" in ansible_net_model'

    - name: SET MODEL VARIABLE C3560X
      set_fact:
        device_model: 'c3560x'
        reboot_timeout: "2100"
      when: '"C3560X-" in ansible_net_model'

    - name: SET MODEL VARIABLE C3750X
      set_fact:
        device_model: 'c3750x'
        reboot_timeout: "2100"
      when: '"C3750X-" in ansible_net_model'

    - name: SET MODEL VARIABLE CAT3K 
      set_fact:
        device_model: 'cat3k'
        reboot_timeout: "1200"
        compliant_ios_version: "{{ compliant_ios_version_cat3k }}"
      when: '"C3650-" in ansible_net_model or "C3850" in ansible_net_model'

    - name: SET MODEL FILE VARIABLES
      set_fact:
        compliant_ios_file: "{{ vars['compliant_ios_file_' + device_model] }}"
        compliant_ios_file_size: "{{ vars['compliant_ios_file_size_' + device_model] }}"

    - debug: msg='FILE NAME - {{compliant_ios_file}} !!! FILE SIZE - {{compliant_ios_file_size}}'

    - name: CHECK FLASH FOR IOS FILE
      ios_command:
        commands:
          - "dir"
      register: dir_response

    - debug: msg='{{dir_response.stdout}}'

    - name: SET FACT ios_file_exists
      set_fact:
        ios_file_exists: "{{true if (compliant_ios_file in dir_response.stdout[0] and compliant_ios_file_size in dir_response.stdout[0]) else false}}"

    - name: GET CAT3K INFO
      block:
      - name: CHECK FOR FLASH-2
        ios_command:
          commands:
            - "dir all | inc flash-"
        register: cat3k_flashes

      - set_fact:
          flash2_exists="{{ true if 'flash-2:' in cat3k_flashes.stdout[0] else false }}"

      - name: CHECK FLASH-2
        ios_command:
          commands:
            - "dir flash-2:"
        register: dir_flash2_response
        when: '"flash-2:" in cat3k_flashes.stdout[0]'

      - debug: msg='{{dir_flash2_response.stdout}}'
        when: '"flash-2:" in cat3k_flashes.stdout[0]'

      - set_fact:
          ios_file2_exists="{{true if (compliant_ios_file in dir_flash2_response.stdout[0] and compliant_ios_file_size in dir_flash2_response.stdout[0]) else false}}"
        when: flash2_exists
      when: '"cat3k" in device_model'

    - set_fact:
        reboot_ready: "{{ true if ((device_model != 'cat3k' and ios_file_exists) or (device_model == 'cat3k' and ios_file_exists and not flash2_exists) or (device_model == 'cat3k' and ios_file_exists and flash2_exists and ios_file2_exists)) else false}}"

    - debug: msg='COMPLIANT IOS - {{compliant_ios_version}} !!! RUNNING IOS - {{ansible_net_version}}\nSWITCH MODEL - {{device_model}} !!! IOS FILE EXISTS - {{ios_file_exists}}'

    - debug: msg='FLASH-2 EXISTS - {{flash2_exists}} !!! FLASH-2 IOS EXISTS - {{ios_file2_exists}}'
      when: '"cat3k" in device_model and flash2_exists'

    - fail:
        msg: The switch does not meet the conditions to be rebooted!!
      when:  not reboot_ready
 
    - name: SAVE CONFIG/RELOAD IF NOT RUNNING COMPLIANT IOS VERSION
      block:
      - name: CHECK FOR FILE/SET BOOT STEPS
        block:
        - name: SAVE RUNNING CONFIG
          ios_command:
            commands:
              - "wr mem\n\n"

        - name: ARCHIVE ORIGINAL CONFIG
          ios_command:
            commands:
              - "copy run ansible_backup_running.cfg\n\n"

#        - meta: end_play

        - name: CHECK BOOT CONFIG
          ios_command:
            commands:
              - "sh boot | inc bin"
          register: bootvar_content

        - name: SET BOOT SYSTEM FLASH
          ios_config:
            lines:
              - "no boot system {{ ansible_net_filesystems[0] }}"
              - "no boot system {{ ansible_net_image }}"
              - "boot system {{ ansible_net_filesystems[0] }}{{ compliant_ios_file }}"
            save_when: modified
          when: device_model != "cat3k" and compliant_ios_file not in bootvar_content.stdout[0]

        - name: SET BOOT SYSTEM FLASH-CAT3K
          ios_config:
            lines:
              - "no boot system"
              - "boot system {{ ansible_net_filesystems[0] }}{{ compliant_ios_file }}"
              - "boot system {{ ansible_net_image }}"
            save_when: modified
          when: device_model == "cat3k" and compliant_ios_file not in bootvar_content.stdout[0]
        when: ios_file_exists

      - name: CHECK BOOT CONFIG
        ios_command:
          commands:
            - "sh boot | inc bin"
        register: bootvar_content

      - name: SAVE NEW CONFIG
        ios_command:
          commands:
            - "copy run start\n"
        when: '"cat3k" in ansible_net_model'

      - name: SHOW STATUS ITEMS BEFORE REBOOT
        ios_command:
          commands:
            - "sh int status  \n"
            - "sh cdp neigh det | inc Device"
        register: sh_status_before

      - name: SHOW STATUS ITEMS BEFORE REBOOT-CAT3K
        ios_command:
          commands:
            - "sh switch | count Ready"
        register: sh_status_cat3k_before
        when: device_model == "cat3k" and 'lan' in ansible_net_hostname

      - name: RELOAD DEVICE
        ios_command:
          commands:
            - "reload\ny\n"

      - debug: msg="NOTE!! UPGRADE OF 3560X/3750X/CAT3K SWITCHES MAY RESULT IN FPGA UPGRADE!!\nTHIS WILL DELAY BOOT PROCESS ~30 MINUTES!!"
        when: '"-X" in ansible_net_model or "cat3k" in ansible_net_image'

      - name: WAIT FOR SWITCH TO RESPOND
        local_action: wait_for
        args:
          host: "{{ inventory_hostname }}"
          port: 22
          state: started
          delay: 15
          timeout: "{{ reboot_timeout }}"

      - name: WAIT FOR 3 MINS FOR SWITCH-2 TO UPGRADE 
        wait_for:
          timeout: 180
        delegate_to: localhost
        when: 'device_model == "cat3k" and flash2_exists'

      - name: WAIT FOR 45 SECONDS TO ESTABLISH NEIGHBORS
        wait_for:
          timeout: 45
        delegate_to: localhost

      - name: GATHER IOS SWITCH FACTS
        ios_facts:
          gather_subset: hardware

      - name: SHOW STATUS ITEMS AFTER REBOOT
        ios_command:
          commands:
            - "sh int status  \n"
            - "sh cdp neigh det | inc Device"
        register: sh_status_after

      - name: SHOW STATUS ITEMS AFTER REBOOT-CAT3K
        ios_command:
          commands:
            - "sh switch | count Ready"
        register: sh_status_cat3k_after
        when: device_model == "cat3k" and 'lan' in ansible_net_hostname

      - name: SET FACT ios_file_exists
        block:
        - set_fact:
            test_int_status: "{{true if sh_status_before.stdout[0] in sh_status_after.stdout[0] else false}}" 
            test_cdp_neigh: "{{true if sh_status_before.stdout[1] in sh_status_after.stdout[1] else false}}"
          
        - set_fact:
            test_switches: "{{true if sh_status_cat3k_before.stdout[0] in sh_status_cat3k_after.stdout[0] else false}}"
          when: device_model == "cat3k"

      - name: ASSERT REBOOT CONDITIONS
        block:
        - assert:
            that:
              - test_int_status == true
              - test_cdp_neigh == true

        - assert:
            that:
            - test_switches == true
          when: device_model == "cat3k"

      when: 'ansible_net_version != compliant_ios_version and switch_type != "legacy" and reboot_ready'
